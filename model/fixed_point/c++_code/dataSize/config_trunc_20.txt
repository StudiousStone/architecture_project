#ifndef __CNN_DATATYPE_HPP__
#define __CNN_DATATYPE_HPP__

#include "constant.hpp"
#include "../ac_types-stable/include/ac_fixed.h"

/* THEORITICAL BIT ADDITION */

#define LOG2_3 2
#define LOG2_9 4
#define LOG2_64 6
#define LOG2_32 5
#define LOG2_180 8

/* intern prod width reduction */

#define PERCEPTRON_PROD_LOSS 2 /* to choose between 1 or 2 */

/********** CNN WEIGHT DATATYPE DEFINITION ************/


#define KERNEL_CONVLAYER1_WEIGHT_DATA_WIDTH 8
#define KERNEL_CONVLAYER1_WEIGHT_DATA_INT_WIDTH 3

#define KERNEL_CONVLAYER2_WEIGHT_DATA_WIDTH 8
#define KERNEL_CONVLAYER2_WEIGHT_DATA_INT_WIDTH 2

#define KERNEL_CONVLAYER3_WEIGHT_DATA_WIDTH 8
#define KERNEL_CONVLAYER3_WEIGHT_DATA_INT_WIDTH 2

#define PERCEPTRON_WEIGHT_DATA_WIDTH 8
#define PERCEPTRON_WEIGHT_DATA_INT_WIDTH 1

#define BIAS_CONVLAYER1_WEIGHT_DATA_WIDTH 8
#define BIAS_CONVLAYER1_WEIGHT_DATA_INT_WIDTH 3

#define BIAS_CONVLAYER2_WEIGHT_DATA_WIDTH 8
#define BIAS_CONVLAYER2_WEIGHT_DATA_INT_WIDTH 3

#define BIAS_CONVLAYER3_WEIGHT_DATA_WIDTH 16
#define BIAS_CONVLAYER3_WEIGHT_DATA_INT_WIDTH 3

#define BIAS_PERCEPTRON_WEIGHT_DATA_WIDTH 8
#define BIAS_PERCEPTRON_WEIGHT_DATA_INT_WIDTH 3

/******* image normalization datatype ************/

#define IMAGE_DATA_WIDTH 8
#define IMAGE_DATA_INT_WIDTH 3

/* CONV LAYER DATATYPE */

#define CONVLAYER1_IN_DATA_WIDTH (IMAGE_DATA_WIDTH)
#define CONVLAYER1_IN_DATA_INT_WIDTH (IMAGE_DATA_INT_WIDTH)

#define CONVLAYER1_OUT_DATA_WIDTH 12 /* to change for test */
#define CONVLAYER1_OUT_DATA_INT_WIDTH 6

#define CONVLAYER2_IN_DATA_WIDTH (CONVLAYER1_OUT_DATA_WIDTH)
#define CONVLAYER2_IN_DATA_INT_WIDTH (CONVLAYER1_OUT_DATA_INT_WIDTH)

#define CONVLAYER2_OUT_DATA_WIDTH 12 /* to change for dim */
#define CONVLAYER2_OUT_DATA_INT_WIDTH 6 /* to test with 6 | 7 otherwise */

#define CONVLAYER3_IN_DATA_WIDTH (CONVLAYER2_OUT_DATA_WIDTH)
#define CONVLAYER3_IN_DATA_INT_WIDTH (CONVLAYER2_OUT_DATA_INT_WIDTH)

#define CONVLAYER3_OUT_DATA_WIDTH 10 /* if INT=7 then 16bit max */
#define CONVLAYER3_OUT_DATA_INT_WIDTH 6 /* 7 to be safe */


/* MAXPOOL DATATYPE */

#define MAXPOOL_LAYER1_DATA_WIDTH (CONVLAYER1_OUT_DATA_WIDTH)
#define MAXPOOL_LAYER1_DATA_INT_WIDTH (CONVLAYER1_OUT_DATA_INT_WIDTH)

#define MAXPOOL_LAYER2_DATA_WIDTH (CONVLAYER2_OUT_DATA_WIDTH)
#define MAXPOOL_LAYER2_DATA_INT_WIDTH (CONVLAYER2_OUT_DATA_INT_WIDTH)

#define MAXPOOL_LAYER3_DATA_WIDTH (CONVLAYER3_OUT_DATA_WIDTH)
#define MAXPOOL_LAYER3_DATA_INT_WIDTH (CONVLAYER3_OUT_DATA_INT_WIDTH)


/********* INTERMEDIARY RESULTS DATATYPE *********/

#define CONVLAYER1_INTERN_PROD_DATA_WIDTH 14 /* 14bits min to change for dim | 12b possible*/
#define CONVLAYER1_INTERN_PROD_DATA_INT_WIDTH 4
					       
#define CONV2DLAYER1_INTERN_SUM_DATA_WIDTH (CONVLAYER1_INTERN_PROD_DATA_WIDTH+LOG2_9-4)
#define CONV2DLAYER1_INTERN_SUM_DATA_INT_WIDTH (CONVLAYER1_INTERN_PROD_DATA_INT_WIDTH+LOG2_9-2)

#define CONVLAYER2_INTERN_PROD_DATA_WIDTH (MAXPOOL_LAYER1_DATA_WIDTH+7-3) /* 7b=frac part ker2+1b->ker2MaxVal=1.14  
15bits if 8b x 8b or 16bits if 8b x 9b */
#define CONVLAYER2_INTERN_PROD_DATA_INT_WIDTH (MAXPOOL_LAYER1_DATA_INT_WIDTH-2)
					       
#define CONV2DLAYER2_INTERN_SUM_DATA_WIDTH (CONVLAYER2_INTERN_PROD_DATA_WIDTH+LOG2_9)
#define CONV2DLAYER2_INTERN_SUM_DATA_INT_WIDTH (CONVLAYER2_INTERN_PROD_DATA_INT_WIDTH+LOG2_9)

#define CONVLAYER3_INTERN_PROD_DATA_WIDTH (MAXPOOL_LAYER2_DATA_WIDTH+6)
#define CONVLAYER3_INTERN_PROD_DATA_INT_WIDTH (MAXPOOL_LAYER2_DATA_INT_WIDTH) /* 6b | 7b should be enougth */
					       
#define CONV2DLAYER3_INTERN_SUM_DATA_WIDTH (CONVLAYER3_INTERN_PROD_DATA_WIDTH+LOG2_9)
#define CONV2DLAYER3_INTERN_SUM_DATA_INT_WIDTH (CONVLAYER3_INTERN_PROD_DATA_INT_WIDTH+LOG2_9)

#define PERCEPTRON_INTERN_PROD_DATA_WIDTH (MAXPOOL_LAYER3_DATA_WIDTH+PERCEPTRON_WEIGHT_DATA_WIDTH-1-PERCEPTRON_PROD_LOSS)
#define PERCEPTRON_INTERN_PROD_DATA_INT_WIDTH (MAXPOOL_LAYER3_DATA_INT_WIDTH+PERCEPTRON_WEIGHT_DATA_INT_WIDTH-1-PERCEPTRON_PROD_LOSS)

#define PERCEPTRON_INTERN_SUM_DATA_WIDTH (PERCEPTRON_INTERN_PROD_DATA_WIDTH+LOG2_180)
#define PERCEPTRON_INTERN_SUM_DATA_INT_WIDTH (PERCEPTRON_INTERN_PROD_DATA_INT_WIDTH+LOG2_180)

#define PERCEPTRON_BIAS_SUM_DATA_WIDTH (PERCEPTRON_INTERN_SUM_DATA_WIDTH+1)
#define PERCEPTRON_BIAS_SUM_DATA_INT_WIDTH (PERCEPTRON_INTERN_SUM_DATA_INT_WIDTH+1)

#define PERCEPTRON_OUTPUT_DATA_WIDTH 16
#define PERCEPTRON_OUTPUT_DATA_INT_WIDTH 7


/******** define cnn datatype for fixed point **************/


/* WEIGHT */
typedef ac_fixed<KERNEL_CONVLAYER1_WEIGHT_DATA_WIDTH ,
  KERNEL_CONVLAYER1_WEIGHT_DATA_INT_WIDTH ,true, AC_RND_INF , AC_SAT> kernelLayer1_weightDataType;
typedef ac_fixed<KERNEL_CONVLAYER2_WEIGHT_DATA_WIDTH ,
  KERNEL_CONVLAYER2_WEIGHT_DATA_INT_WIDTH ,true, AC_RND_INF , AC_SAT> kernelLayer2_weightDataType;
typedef ac_fixed<KERNEL_CONVLAYER3_WEIGHT_DATA_WIDTH ,
  KERNEL_CONVLAYER3_WEIGHT_DATA_INT_WIDTH ,true, AC_RND_INF , AC_SAT> kernelLayer3_weightDataType;
typedef ac_fixed<PERCEPTRON_WEIGHT_DATA_WIDTH ,
  PERCEPTRON_WEIGHT_DATA_INT_WIDTH ,true, AC_RND_INF , AC_SAT> fcLayer_weightDataType;
typedef ac_fixed<BIAS_CONVLAYER1_WEIGHT_DATA_WIDTH ,
  BIAS_CONVLAYER1_WEIGHT_DATA_INT_WIDTH ,true, AC_RND_INF , AC_SAT> biasLayer1_weightDataType;
typedef ac_fixed<BIAS_CONVLAYER2_WEIGHT_DATA_WIDTH ,
  BIAS_CONVLAYER2_WEIGHT_DATA_INT_WIDTH ,true, AC_RND_INF , AC_SAT> biasLayer2_weightDataType;
typedef ac_fixed<BIAS_CONVLAYER3_WEIGHT_DATA_WIDTH ,
  BIAS_CONVLAYER3_WEIGHT_DATA_INT_WIDTH ,true, AC_RND_INF , AC_SAT> biasLayer3_weightDataType;
typedef ac_fixed<BIAS_PERCEPTRON_WEIGHT_DATA_WIDTH ,
  BIAS_PERCEPTRON_WEIGHT_DATA_INT_WIDTH ,true, AC_RND_INF , AC_SAT> biasfcLayer_weightDataType;

/* NORMALIZED IMAGE */
typedef ac_fixed<IMAGE_DATA_WIDTH , IMAGE_DATA_INT_WIDTH ,true,
  AC_RND_INF , AC_SAT> imageNorm_dataType;

/* CONVOLUTION LAYER 1 */

typedef ac_fixed<CONVLAYER1_OUT_DATA_WIDTH , CONVLAYER1_OUT_DATA_INT_WIDTH ,true,
  AC_TRN , AC_SAT> convLayer1Out_dataType;
/*typedef ac_fixed<CONVLAYER1_OUT_DATA_WIDTH+1 , CONVLAYER1_OUT_DATA_INT_WIDTH+1 ,true,
  AC_TRN , AC_SAT> convLayer1InternOut_dataType;*/
typedef ac_fixed<CONV2DLAYER1_INTERN_SUM_DATA_WIDTH+LOG2_3 ,CONV2DLAYER1_INTERN_SUM_DATA_INT_WIDTH+LOG2_3 ,true,
  AC_TRN , AC_SAT> convLayer1InternOut_dataType;
typedef ac_fixed<CONVLAYER1_INTERN_PROD_DATA_WIDTH , CONVLAYER1_INTERN_PROD_DATA_INT_WIDTH ,true,
  AC_TRN , AC_SAT> convLayer1InternProd_dataType;
typedef ac_fixed<CONV2DLAYER1_INTERN_SUM_DATA_WIDTH , CONV2DLAYER1_INTERN_SUM_DATA_INT_WIDTH ,true,
  AC_TRN , AC_SAT> conv2DLayer1InternSum_dataType;


/* CONVOLUTION LAYER 2 */

typedef ac_fixed<CONVLAYER2_OUT_DATA_WIDTH , CONVLAYER2_OUT_DATA_INT_WIDTH ,true,
  AC_TRN , AC_SAT> convLayer2Out_dataType;
/*typedef ac_fixed<CONVLAYER2_OUT_DATA_WIDTH+1 , CONVLAYER2_OUT_DATA_INT_WIDTH+1 ,true,
  AC_TRN , AC_SAT> convLayer2InternOut_dataType;*/
typedef ac_fixed< CONV2DLAYER2_INTERN_SUM_DATA_WIDTH+LOG2_64+1,CONVLAYER2_OUT_DATA_INT_WIDTH+LOG2_64+1 ,true,
  AC_TRN , AC_SAT> convLayer2InternOut_dataType;
typedef ac_fixed<CONVLAYER2_INTERN_PROD_DATA_WIDTH , CONVLAYER2_INTERN_PROD_DATA_INT_WIDTH ,true,
  AC_TRN , AC_SAT> convLayer2InternProd_dataType;
typedef ac_fixed<CONV2DLAYER2_INTERN_SUM_DATA_WIDTH , CONV2DLAYER2_INTERN_SUM_DATA_INT_WIDTH ,true,
  AC_TRN , AC_SAT> conv2DLayer2InternSum_dataType;

/* CONVOLUTION LAYER 3 */

typedef ac_fixed<CONVLAYER3_OUT_DATA_WIDTH , CONVLAYER3_OUT_DATA_INT_WIDTH ,true,
  AC_TRN , AC_SAT> convLayer3Out_dataType;
/*typedef ac_fixed<CONVLAYER3_OUT_DATA_WIDTH+1 , CONVLAYER3_OUT_DATA_INT_WIDTH+1 ,true,
  AC_TRN , AC_SAT> convLayer3InternOut_dataType;*/
typedef ac_fixed<CONV2DLAYER3_INTERN_SUM_DATA_WIDTH+LOG2_32+1,CONV2DLAYER3_INTERN_SUM_DATA_INT_WIDTH+LOG2_32+1,
		 true,AC_TRN , AC_SAT> convLayer3InternOut_dataType;
typedef ac_fixed<CONVLAYER3_INTERN_PROD_DATA_WIDTH , CONVLAYER3_INTERN_PROD_DATA_INT_WIDTH ,true,
  AC_TRN , AC_SAT> convLayer3InternProd_dataType;
typedef ac_fixed<CONV2DLAYER3_INTERN_SUM_DATA_WIDTH , CONV2DLAYER3_INTERN_SUM_DATA_INT_WIDTH ,true,
  AC_TRN , AC_SAT> conv2DLayer3InternSum_dataType;


/* PERCEPTRON */

typedef ac_fixed<MAXPOOL_LAYER3_DATA_WIDTH , MAXPOOL_LAYER3_DATA_INT_WIDTH ,true,
  AC_TRN , AC_SAT> inputVector_dataType;
typedef ac_fixed<PERCEPTRON_WEIGHT_DATA_WIDTH , PERCEPTRON_WEIGHT_DATA_INT_WIDTH ,
  true, AC_TRN , AC_SAT> fcLayerVector_dataType;
typedef ac_fixed<PERCEPTRON_INTERN_PROD_DATA_WIDTH , PERCEPTRON_INTERN_PROD_DATA_INT_WIDTH ,
  true, AC_TRN , AC_SAT> fcLayerInternalProduct_dataType;
typedef ac_fixed<PERCEPTRON_INTERN_SUM_DATA_WIDTH , PERCEPTRON_INTERN_SUM_DATA_INT_WIDTH ,
  true, AC_TRN , AC_SAT> fcLayerInternalSum_dataType;
typedef ac_fixed<PERCEPTRON_BIAS_SUM_DATA_WIDTH , PERCEPTRON_BIAS_SUM_DATA_INT_WIDTH ,
  true, AC_TRN , AC_SAT> fcLayerBiasSum_dataType;
typedef ac_fixed<PERCEPTRON_OUTPUT_DATA_WIDTH , PERCEPTRON_OUTPUT_DATA_INT_WIDTH ,
  true, AC_TRN , AC_SAT> fcLayerOut_dataType;

/* MAXPOOL LAYER  */
typedef ac_fixed<MAXPOOL_LAYER1_DATA_WIDTH , MAXPOOL_LAYER1_DATA_INT_WIDTH ,
  true, AC_TRN , AC_SAT> poolingLayer1_DataType;
typedef ac_fixed<MAXPOOL_LAYER2_DATA_WIDTH , MAXPOOL_LAYER2_DATA_INT_WIDTH ,
  true, AC_TRN , AC_SAT> poolingLayer2_DataType;
typedef ac_fixed<MAXPOOL_LAYER3_DATA_WIDTH , MAXPOOL_LAYER3_DATA_INT_WIDTH ,
  true, AC_TRN , AC_SAT> poolingLayer3_DataType;

#endif

